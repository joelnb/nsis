target = "NSIS"

files = Split("""
	nsismenu/nsismenu.cpp
	nsismenu/nslinks.cpp
""")

resources = Split("""
	nsismenu/nsisicon.ico
""")

rc = 'nsismenu/nsismenu.rc'

libs = Split("""
	advapi32
	comctl32
	gdi32
	shell32
	user32
	wxbase28
	wxmsw28_core
	wxmsw28_html
""")

html = Split("""
	#Menu/compiler.html
	#Menu/docs.html
	#Menu/index.html
	#Menu/intro.html
	#Menu/notinstalled.html
	#Menu/update.html
	#Menu/websites.html
""")

images = Split("""
	#Menu/images/clear.gif
	#Menu/images/header.gif
	#Menu/images/line.gif
	#Menu/images/menu.gif
	#Menu/images/menud.gif
	#Menu/images/site.gif
""")

Import('BuildUtil env')

import os
from os.path import join

if os.environ.has_key('WXWIN'):
	# directories

	wxlib = [join(os.environ['WXWIN'], 'lib', 'vc_libnsis')]
	wxinc = [
		join(os.environ['WXWIN'], 'include'),
		join(os.environ['WXWIN'], 'lib', 'vc_libnsis', 'msw')
	]

	# build

	BuildUtil(
		target,
		files,
		libs,
		res = rc,
		resources = resources,
		flags = ['/MD', '$EXCEPTION_FLAG'],
		libpath = wxlib,
		incpath = wxinc,
		root_util = True
	)

	# install menu files

	env.DistributeMenu(html, alias='install-utils')
	env.DistributeMenu(images, path='images', alias='install-utils')

else:
	
	# no wxWidgets
	def err(target, source, env):
		print '*** error: WXWIN must be set to build NSIS Menu!'
		return 1

	cmd = env.Command(target, files, Action(err, ''))
	env.Alias('NSIS Menu', cmd)
